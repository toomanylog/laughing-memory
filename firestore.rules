rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Autoriser la lecture des contenus pour tous les utilisateurs (authentifiés ou non)
    match /contents/{contentId} {
      allow read: true;
      // Seuls les utilisateurs admin peuvent ajouter/modifier/supprimer des contenus
      allow write: if isAdmin();
    }
    
    // Gestion des utilisateurs - chaque utilisateur ne peut accéder qu'à ses propres données
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      // Permettre aux admins de mettre à jour n'importe quel utilisateur
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Seuls les admins peuvent supprimer des utilisateurs
      allow delete: if isAdmin();
    }
    
    // Gestion des progressions - chaque utilisateur ne peut accéder qu'à sa propre progression
    match /progress/{userId}/{document=**} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
  }
} 